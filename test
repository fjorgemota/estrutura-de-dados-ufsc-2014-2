#!/bin/bash
FILES=`find . | grep \..pp\$`
ERROR=0
for FILE in $FILES; do
	echo "Checando $FILE"
	CPPLINT_ERRORS=`./cpplint.py --extensions=hpp,cpp --root=$INPUT_DIR $FILE  2>&1 >/dev/null`
	NUM_COUNT=`echo $CPPLINT_ERRORS | grep -E -o "Total errors found: [0-9]+" | grep -E -o "[0-9]+"`
	if [ "$NUM_COUNT" == "0" ]; then
		echo "Nenhum erro de estilo detectado! Parabens!"
	else
		echo "$NUM_COUNT erros de estilo detectados. Conserte-os:"
		echo -e "$CPPLINT_ERRORS"
		ERROR=1
	fi;
	python -c "print '-'*100"
done;
DOXYGEN_PATH=`which doxygen`
if [ ! -z "$DOXYGEN_PATH" ]; then
	OLD=`pwd`
	cd $INPUT_DIR
	DOXYGEN_ERRORS=`echo -e 'OUTPUT_DIRECTORY = /tmp/\nEXCLUDE = cpplint.py' | $DOXYGEN_PATH - 2>&1 | grep -o '.*is not documented'`
	cd $OLD
	if [ -z "$DOXYGEN_ERRORS" ]; then
		echo "Parece que o Doxygen aprovou sua documentacao! Parabens!"
	else
		echo "Documentacao nao encontrada no codigo para os seguintes objetos:"
		echo -e "$DOXYGEN_ERRORS"
		echo "Registrando erro..."
		ERROR=1
	fi;
else
	echo "Doxygen nao encontrado. Status da documentacao nao avaliado."
fi;
python -c "print '-'*100"
echo "Testando projeto em modo DEBUG.."
TEST_LOG=`make CONF=Debug test 2>&1`
if [ "$?" == "0" ]; then
	NUM_ERRORS=`echo $TEST_LOG | grep 'FAILED' | grep '(' | wc -l`
else
	NUM_ERRORS=1
fi
if [ "$NUM_ERRORS" == "0" ]; then
	echo "Nenhum erro encontrado, parabens!"
else
	echo "Encontrado $NUM_ERRORS erros durante o teste. Verifique-os:"
	echo -e "$TEST_LOG"
	ERROR=1
fi
python -c "print '-'*100"
echo "Limpando arquivos executaveis.."
make clobber 2>/dev/null 1>/dev/null
echo "Tudo limpo :D"
python -c "print '-'*100"
if [ $ERROR == 1 ]; then
	echo "Erros detectados! Corrija-os e tente novamente!"
	exit 1
else
	echo "Nenhum erro encontrado. Parabens! :D"
fi
